DECLARE @SchemaName NVARCHAR(255)
DECLARE @TableName NVARCHAR(255)
DECLARE @SQL NVARCHAR(MAX)

-- Create a temporary table to store the results
CREATE TABLE #ResultTable (
    TableName NVARCHAR(255),
    ColumnName NVARCHAR(255),
    CountDuplicates INT
);

DECLARE table_cursor CURSOR FOR
SELECT s.name AS SchemaName, t.name AS TableName
FROM sys.tables t
INNER JOIN sys.schemas s ON t.schema_id = s.schema_id
ORDER BY s.name, t.name

OPEN table_cursor

FETCH NEXT FROM table_cursor INTO @SchemaName, @TableName

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @SQL = 
        'INSERT INTO #ResultTable ' +
        'SELECT ' +
            '''' + @TableName + ''' AS TableName, ' +
            (SELECT 'CAST(' + QUOTENAME(c.name) + ' AS NVARCHAR(MAX)) AS ColumnName, ' FROM sys.columns c WHERE c.object_id = OBJECT_ID(@SchemaName + '.' + @TableName) FOR XML PATH('')) +
            'COUNT(*) AS CountDuplicates ' +
        'FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName) +
        ' GROUP BY ' +
            (SELECT QUOTENAME(c.name) + ', ' FROM sys.columns c WHERE c.object_id = OBJECT_ID(@SchemaName + '.' + @TableName) FOR XML PATH(''))

    -- Remove trailing comma
    SET @SQL = LEFT(@SQL, LEN(@SQL) - 1)

    -- Execute dynamic SQL
    EXEC sp_executesql @SQL

    FETCH NEXT FROM table_cursor INTO @SchemaName, @TableName
END

CLOSE table_cursor
DEALLOCATE table_cursor

-- Output the result
SELECT * FROM #ResultTable

-- Drop the temporary table
DROP TABLE #ResultTable;
