DECLARE @SchemaName NVARCHAR(255)
DECLARE @TableName NVARCHAR(255)
DECLARE @ColumnName NVARCHAR(255)
DECLARE @SQL NVARCHAR(MAX)
DECLARE @HTMLResult NVARCHAR(MAX) = '';

-- Create a temporary table to store the results
CREATE TABLE #ResultTable (
    SchemaName NVARCHAR(255),
    TableName NVARCHAR(255),
    ColumnName NVARCHAR(255),
    CountDuplicates INT
);

DECLARE table_cursor CURSOR FOR
SELECT s.name AS SchemaName, t.name AS TableName, c.name AS ColumnName
FROM sys.tables t
INNER JOIN sys.schemas s ON t.schema_id = s.schema_id
INNER JOIN sys.columns c ON t.object_id = c.object_id
ORDER BY s.name, t.name, c.name

OPEN table_cursor

FETCH NEXT FROM table_cursor INTO @SchemaName, @TableName, @ColumnName

WHILE @@FETCH_STATUS = 0
BEGIN
    SET @SQL = 
        'INSERT INTO #ResultTable ' +
        'SELECT ' +
            '''' + @SchemaName + ''' AS SchemaName, ' +
            '''' + @TableName + ''' AS TableName, ' +
            '''' + @ColumnName + ''' AS ColumnName, ' +
            'COUNT(*) AS CountDuplicates ' +
        'FROM ' + QUOTENAME(@SchemaName) + '.' + QUOTENAME(@TableName) +
        ' GROUP BY ' + QUOTENAME(@ColumnName) + ' HAVING COUNT(*) > 1'

    -- Execute dynamic SQL
    EXEC sp_executesql @SQL

    FETCH NEXT FROM table_cursor INTO @SchemaName, @TableName, @ColumnName
END

CLOSE table_cursor
DEALLOCATE table_cursor

-- Generate a dynamic list of columns for the final result set
DECLARE @DynamicColumns NVARCHAR(MAX)
SELECT @DynamicColumns = COALESCE(@DynamicColumns + ',', '') + QUOTENAME(ColumnName) FROM #ResultTable

-- Output the HTML result
SET @HTMLResult = @HTMLResult + '<html><head></head><body><table border="1"><tr><th>Schema Name</th><th>Table Name</th>' + @DynamicColumns +
    '<th>Duplicate Row Count</th></tr>';
SET @HTMLResult = @HTMLResult + 
    '<tr><td>' + SchemaName + '</td><td>' + TableName + '</td>' +
    (SELECT ',<td>' + ColumnName + '</td>' FROM #ResultTable FOR XML PATH('')) +
    '<td>' + CAST(CountDuplicates AS NVARCHAR(MAX)) + '</td></tr>' FROM #ResultTable;
SET @HTMLResult = @HTMLResult + '</table></body></html>';

-- Drop the temporary table
DROP TABLE #ResultTable;

-- Output the HTML result
SELECT @HTMLResult AS HTMLResult;
